/*
Copyright 2017 IBM Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go.
// source: trail.proto
// DO NOT EDIT!

/*
Package client is a generated protocol buffer package.

It is generated from these files:
	trail.proto

It has these top-level messages:
	TrailEventSet
	TrailEventWK
	TrailEvent
	UpstreamService
	Request
	Response
	API
	Latencies
	Consumer
	CadfEventSet
	CadfEventWK
	CadfEvent
	Meta
	CadfResource
	CadfHost
	CadfCredential
	CadfReason
	CadfAttachment
	CadfReporterstep
	CadfAPI
	CadfLatencies
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TrailEventSet struct {
	Count           uint64           `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	UpstreamService *UpstreamService `protobuf:"bytes,2,opt,name=upstream_service,json=upstreamService" json:"upstream_service,omitempty"`
	Events          []*TrailEventWK  `protobuf:"bytes,3,rep,name=events" json:"events,omitempty"`
}

func (m *TrailEventSet) Reset()                    { *m = TrailEventSet{} }
func (m *TrailEventSet) String() string            { return proto.CompactTextString(m) }
func (*TrailEventSet) ProtoMessage()               {}
func (*TrailEventSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TrailEventSet) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TrailEventSet) GetUpstreamService() *UpstreamService {
	if m != nil {
		return m.UpstreamService
	}
	return nil
}

func (m *TrailEventSet) GetEvents() []*TrailEventWK {
	if m != nil {
		return m.Events
	}
	return nil
}

// WK = Well Known (by iauth and ledge)
type TrailEventWK struct {
	Meta    *Meta       `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Payload *TrailEvent `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
}

func (m *TrailEventWK) Reset()                    { *m = TrailEventWK{} }
func (m *TrailEventWK) String() string            { return proto.CompactTextString(m) }
func (*TrailEventWK) ProtoMessage()               {}
func (*TrailEventWK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TrailEventWK) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *TrailEventWK) GetPayload() *TrailEvent {
	if m != nil {
		return m.Payload
	}
	return nil
}

type TrailEvent struct {
	StartedAt uint64     `protobuf:"varint,1,opt,name=started_at,json=startedAt" json:"started_at,omitempty"`
	ClientIp  string     `protobuf:"bytes,2,opt,name=client_ip,json=clientIp" json:"client_ip,omitempty"`
	Api       *API       `protobuf:"bytes,3,opt,name=api" json:"api,omitempty"`
	Latencies *Latencies `protobuf:"bytes,4,opt,name=latencies" json:"latencies,omitempty"`
	Request   *Request   `protobuf:"bytes,5,opt,name=request" json:"request,omitempty"`
	Response  *Response  `protobuf:"bytes,6,opt,name=response" json:"response,omitempty"`
	Consumer  *Consumer  `protobuf:"bytes,7,opt,name=consumer" json:"consumer,omitempty"`
}

func (m *TrailEvent) Reset()                    { *m = TrailEvent{} }
func (m *TrailEvent) String() string            { return proto.CompactTextString(m) }
func (*TrailEvent) ProtoMessage()               {}
func (*TrailEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TrailEvent) GetStartedAt() uint64 {
	if m != nil {
		return m.StartedAt
	}
	return 0
}

func (m *TrailEvent) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *TrailEvent) GetApi() *API {
	if m != nil {
		return m.Api
	}
	return nil
}

func (m *TrailEvent) GetLatencies() *Latencies {
	if m != nil {
		return m.Latencies
	}
	return nil
}

func (m *TrailEvent) GetRequest() *Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *TrailEvent) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *TrailEvent) GetConsumer() *Consumer {
	if m != nil {
		return m.Consumer
	}
	return nil
}

type UpstreamService struct {
	ServiceProviderName      string `protobuf:"bytes,1,opt,name=service_provider_name,json=serviceProviderName" json:"service_provider_name,omitempty"`
	ServiceProviderRegion    string `protobuf:"bytes,2,opt,name=service_provider_region,json=serviceProviderRegion" json:"service_provider_region,omitempty"`
	ServiceProviderProjectId string `protobuf:"bytes,3,opt,name=service_provider_project_id,json=serviceProviderProjectId" json:"service_provider_project_id,omitempty"`
	ServiceProviderAccountId string `protobuf:"bytes,4,opt,name=service_provider_account_id,json=serviceProviderAccountId" json:"service_provider_account_id,omitempty"`
}

func (m *UpstreamService) Reset()                    { *m = UpstreamService{} }
func (m *UpstreamService) String() string            { return proto.CompactTextString(m) }
func (*UpstreamService) ProtoMessage()               {}
func (*UpstreamService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpstreamService) GetServiceProviderName() string {
	if m != nil {
		return m.ServiceProviderName
	}
	return ""
}

func (m *UpstreamService) GetServiceProviderRegion() string {
	if m != nil {
		return m.ServiceProviderRegion
	}
	return ""
}

func (m *UpstreamService) GetServiceProviderProjectId() string {
	if m != nil {
		return m.ServiceProviderProjectId
	}
	return ""
}

func (m *UpstreamService) GetServiceProviderAccountId() string {
	if m != nil {
		return m.ServiceProviderAccountId
	}
	return ""
}

type Request struct {
	Method      string            `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Uri         string            `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
	RequestBody string            `protobuf:"bytes,3,opt,name=request_body,json=requestBody" json:"request_body,omitempty"`
	Size        string            `protobuf:"bytes,4,opt,name=size" json:"size,omitempty"`
	RequestUri  string            `protobuf:"bytes,5,opt,name=request_uri,json=requestUri" json:"request_uri,omitempty"`
	Querystring map[string]string `protobuf:"bytes,6,rep,name=querystring" json:"querystring,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Headers     map[string]string `protobuf:"bytes,7,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Request) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Request) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Request) GetRequestBody() string {
	if m != nil {
		return m.RequestBody
	}
	return ""
}

func (m *Request) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *Request) GetRequestUri() string {
	if m != nil {
		return m.RequestUri
	}
	return ""
}

func (m *Request) GetQuerystring() map[string]string {
	if m != nil {
		return m.Querystring
	}
	return nil
}

func (m *Request) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

type Response struct {
	Status       uint32            `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Size         string            `protobuf:"bytes,2,opt,name=size" json:"size,omitempty"`
	ResponseBody string            `protobuf:"bytes,4,opt,name=response_body,json=responseBody" json:"response_body,omitempty"`
	Headers      map[string]string `protobuf:"bytes,5,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Response) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Response) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *Response) GetResponseBody() string {
	if m != nil {
		return m.ResponseBody
	}
	return ""
}

func (m *Response) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

type API struct {
	CreatedAt   uint64 `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpstreamUrl string `protobuf:"bytes,2,opt,name=upstream_url,json=upstreamUrl" json:"upstream_url,omitempty"`
	Id          string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	RequestHost string `protobuf:"bytes,5,opt,name=request_host,json=requestHost" json:"request_host,omitempty"`
}

func (m *API) Reset()                    { *m = API{} }
func (m *API) String() string            { return proto.CompactTextString(m) }
func (*API) ProtoMessage()               {}
func (*API) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *API) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *API) GetUpstreamUrl() string {
	if m != nil {
		return m.UpstreamUrl
	}
	return ""
}

func (m *API) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *API) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *API) GetRequestHost() string {
	if m != nil {
		return m.RequestHost
	}
	return ""
}

type Latencies struct {
	Request uint32 `protobuf:"varint,1,opt,name=request" json:"request,omitempty"`
	Kong    uint32 `protobuf:"varint,2,opt,name=kong" json:"kong,omitempty"`
	Proxy   uint32 `protobuf:"varint,3,opt,name=proxy" json:"proxy,omitempty"`
}

func (m *Latencies) Reset()                    { *m = Latencies{} }
func (m *Latencies) String() string            { return proto.CompactTextString(m) }
func (*Latencies) ProtoMessage()               {}
func (*Latencies) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Latencies) GetRequest() uint32 {
	if m != nil {
		return m.Request
	}
	return 0
}

func (m *Latencies) GetKong() uint32 {
	if m != nil {
		return m.Kong
	}
	return 0
}

func (m *Latencies) GetProxy() uint32 {
	if m != nil {
		return m.Proxy
	}
	return 0
}

type Consumer struct {
	Username  string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	CreatedAt uint64 `protobuf:"varint,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *Consumer) Reset()                    { *m = Consumer{} }
func (m *Consumer) String() string            { return proto.CompactTextString(m) }
func (*Consumer) ProtoMessage()               {}
func (*Consumer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Consumer) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Consumer) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Consumer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// /////////////////////////
// CADF PROTO DEFINITION
// /////////////////////////
type CadfEventSet struct {
	Count           uint64           `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	UpstreamService *UpstreamService `protobuf:"bytes,2,opt,name=upstream_service,json=upstreamService" json:"upstream_service,omitempty"`
	Events          []*CadfEventWK   `protobuf:"bytes,3,rep,name=events" json:"events,omitempty"`
}

func (m *CadfEventSet) Reset()                    { *m = CadfEventSet{} }
func (m *CadfEventSet) String() string            { return proto.CompactTextString(m) }
func (*CadfEventSet) ProtoMessage()               {}
func (*CadfEventSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CadfEventSet) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CadfEventSet) GetUpstreamService() *UpstreamService {
	if m != nil {
		return m.UpstreamService
	}
	return nil
}

func (m *CadfEventSet) GetEvents() []*CadfEventWK {
	if m != nil {
		return m.Events
	}
	return nil
}

// WK = Well Known (by iauth and ledge)
type CadfEventWK struct {
	Meta    *Meta      `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Payload *CadfEvent `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
}

func (m *CadfEventWK) Reset()                    { *m = CadfEventWK{} }
func (m *CadfEventWK) String() string            { return proto.CompactTextString(m) }
func (*CadfEventWK) ProtoMessage()               {}
func (*CadfEventWK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CadfEventWK) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CadfEventWK) GetPayload() *CadfEvent {
	if m != nil {
		return m.Payload
	}
	return nil
}

type CadfEvent struct {
	Id             string              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeURI        string              `protobuf:"bytes,2,opt,name=typeURI" json:"typeURI,omitempty"`
	EventType      string              `protobuf:"bytes,3,opt,name=eventType" json:"eventType,omitempty"`
	EventTime      string              `protobuf:"bytes,4,opt,name=eventTime" json:"eventTime,omitempty"`
	Action         string              `protobuf:"bytes,5,opt,name=action" json:"action,omitempty"`
	Outcome        string              `protobuf:"bytes,6,opt,name=outcome" json:"outcome,omitempty"`
	Message        string              `protobuf:"bytes,7,opt,name=message" json:"message,omitempty"`
	Initiator      *CadfResource       `protobuf:"bytes,8,opt,name=initiator" json:"initiator,omitempty"`
	Target         *CadfResource       `protobuf:"bytes,9,opt,name=target" json:"target,omitempty"`
	Observer       *CadfResource       `protobuf:"bytes,10,opt,name=observer" json:"observer,omitempty"`
	RequestPath    string              `protobuf:"bytes,11,opt,name=requestPath" json:"requestPath,omitempty"`
	Reason         *CadfReason         `protobuf:"bytes,12,opt,name=reason" json:"reason,omitempty"`
	Severity       string              `protobuf:"bytes,13,opt,name=severity" json:"severity,omitempty"`
	Name           string              `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	RequestHeader  *CadfAttachment     `protobuf:"bytes,15,opt,name=requestHeader" json:"requestHeader,omitempty"`
	RequestBody    *CadfAttachment     `protobuf:"bytes,16,opt,name=requestBody" json:"requestBody,omitempty"`
	ResponseHeader *CadfAttachment     `protobuf:"bytes,17,opt,name=responseHeader" json:"responseHeader,omitempty"`
	ResponseBody   *CadfAttachment     `protobuf:"bytes,18,opt,name=responseBody" json:"responseBody,omitempty"`
	RequestData    string              `protobuf:"bytes,19,opt,name=requestData" json:"requestData,omitempty"`
	ResponseData   string              `protobuf:"bytes,20,opt,name=responseData" json:"responseData,omitempty"`
	Tags           []string            `protobuf:"bytes,21,rep,name=tags" json:"tags,omitempty"`
	Attachments    []*CadfAttachment   `protobuf:"bytes,22,rep,name=attachments" json:"attachments,omitempty"`
	Reporterchain  []*CadfReporterstep `protobuf:"bytes,23,rep,name=reporterchain" json:"reporterchain,omitempty"`
	Api            *CadfAPI            `protobuf:"bytes,24,opt,name=api" json:"api,omitempty"`
	Latencies      *CadfLatencies      `protobuf:"bytes,25,opt,name=latencies" json:"latencies,omitempty"`
}

func (m *CadfEvent) Reset()                    { *m = CadfEvent{} }
func (m *CadfEvent) String() string            { return proto.CompactTextString(m) }
func (*CadfEvent) ProtoMessage()               {}
func (*CadfEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CadfEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CadfEvent) GetTypeURI() string {
	if m != nil {
		return m.TypeURI
	}
	return ""
}

func (m *CadfEvent) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *CadfEvent) GetEventTime() string {
	if m != nil {
		return m.EventTime
	}
	return ""
}

func (m *CadfEvent) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CadfEvent) GetOutcome() string {
	if m != nil {
		return m.Outcome
	}
	return ""
}

func (m *CadfEvent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CadfEvent) GetInitiator() *CadfResource {
	if m != nil {
		return m.Initiator
	}
	return nil
}

func (m *CadfEvent) GetTarget() *CadfResource {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *CadfEvent) GetObserver() *CadfResource {
	if m != nil {
		return m.Observer
	}
	return nil
}

func (m *CadfEvent) GetRequestPath() string {
	if m != nil {
		return m.RequestPath
	}
	return ""
}

func (m *CadfEvent) GetReason() *CadfReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *CadfEvent) GetSeverity() string {
	if m != nil {
		return m.Severity
	}
	return ""
}

func (m *CadfEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CadfEvent) GetRequestHeader() *CadfAttachment {
	if m != nil {
		return m.RequestHeader
	}
	return nil
}

func (m *CadfEvent) GetRequestBody() *CadfAttachment {
	if m != nil {
		return m.RequestBody
	}
	return nil
}

func (m *CadfEvent) GetResponseHeader() *CadfAttachment {
	if m != nil {
		return m.ResponseHeader
	}
	return nil
}

func (m *CadfEvent) GetResponseBody() *CadfAttachment {
	if m != nil {
		return m.ResponseBody
	}
	return nil
}

func (m *CadfEvent) GetRequestData() string {
	if m != nil {
		return m.RequestData
	}
	return ""
}

func (m *CadfEvent) GetResponseData() string {
	if m != nil {
		return m.ResponseData
	}
	return ""
}

func (m *CadfEvent) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CadfEvent) GetAttachments() []*CadfAttachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *CadfEvent) GetReporterchain() []*CadfReporterstep {
	if m != nil {
		return m.Reporterchain
	}
	return nil
}

func (m *CadfEvent) GetApi() *CadfAPI {
	if m != nil {
		return m.Api
	}
	return nil
}

func (m *CadfEvent) GetLatencies() *CadfLatencies {
	if m != nil {
		return m.Latencies
	}
	return nil
}

type Meta struct {
	ServiceProviderName      string   `protobuf:"bytes,1,opt,name=service_provider_name,json=serviceProviderName" json:"service_provider_name,omitempty"`
	ServiceProviderRegion    string   `protobuf:"bytes,2,opt,name=service_provider_region,json=serviceProviderRegion" json:"service_provider_region,omitempty"`
	ServiceProviderProjectId string   `protobuf:"bytes,3,opt,name=service_provider_project_id,json=serviceProviderProjectId" json:"service_provider_project_id,omitempty"`
	UserAccountIds           []string `protobuf:"bytes,4,rep,name=user_account_ids,json=userAccountIds" json:"user_account_ids,omitempty"`
	UserSpaceId              string   `protobuf:"bytes,5,opt,name=user_space_id,json=userSpaceId" json:"user_space_id,omitempty"`
	UserSpaceRegion          string   `protobuf:"bytes,6,opt,name=user_space_region,json=userSpaceRegion" json:"user_space_region,omitempty"`
	ServiceClientIp          string   `protobuf:"bytes,7,opt,name=service_client_ip,json=serviceClientIp" json:"service_client_ip,omitempty"`
	ServiceProviderAuthType  string   `protobuf:"bytes,8,opt,name=service_provider_auth_type,json=serviceProviderAuthType" json:"service_provider_auth_type,omitempty"`
	ApiVersion               string   `protobuf:"bytes,9,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Meta) GetServiceProviderName() string {
	if m != nil {
		return m.ServiceProviderName
	}
	return ""
}

func (m *Meta) GetServiceProviderRegion() string {
	if m != nil {
		return m.ServiceProviderRegion
	}
	return ""
}

func (m *Meta) GetServiceProviderProjectId() string {
	if m != nil {
		return m.ServiceProviderProjectId
	}
	return ""
}

func (m *Meta) GetUserAccountIds() []string {
	if m != nil {
		return m.UserAccountIds
	}
	return nil
}

func (m *Meta) GetUserSpaceId() string {
	if m != nil {
		return m.UserSpaceId
	}
	return ""
}

func (m *Meta) GetUserSpaceRegion() string {
	if m != nil {
		return m.UserSpaceRegion
	}
	return ""
}

func (m *Meta) GetServiceClientIp() string {
	if m != nil {
		return m.ServiceClientIp
	}
	return ""
}

func (m *Meta) GetServiceProviderAuthType() string {
	if m != nil {
		return m.ServiceProviderAuthType
	}
	return ""
}

func (m *Meta) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

type CadfResource struct {
	Id         string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeURI    string          `protobuf:"bytes,2,opt,name=typeURI" json:"typeURI,omitempty"`
	Name       string          `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Host       *CadfHost       `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Credential *CadfCredential `protobuf:"bytes,5,opt,name=credential" json:"credential,omitempty"`
	ProjectId  string          `protobuf:"bytes,6,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
}

func (m *CadfResource) Reset()                    { *m = CadfResource{} }
func (m *CadfResource) String() string            { return proto.CompactTextString(m) }
func (*CadfResource) ProtoMessage()               {}
func (*CadfResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CadfResource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CadfResource) GetTypeURI() string {
	if m != nil {
		return m.TypeURI
	}
	return ""
}

func (m *CadfResource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CadfResource) GetHost() *CadfHost {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *CadfResource) GetCredential() *CadfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *CadfResource) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type CadfHost struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Agent    string `protobuf:"bytes,3,opt,name=agent" json:"agent,omitempty"`
	Platform string `protobuf:"bytes,4,opt,name=platform" json:"platform,omitempty"`
}

func (m *CadfHost) Reset()                    { *m = CadfHost{} }
func (m *CadfHost) String() string            { return proto.CompactTextString(m) }
func (*CadfHost) ProtoMessage()               {}
func (*CadfHost) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CadfHost) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CadfHost) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CadfHost) GetAgent() string {
	if m != nil {
		return m.Agent
	}
	return ""
}

func (m *CadfHost) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type CadfCredential struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *CadfCredential) Reset()                    { *m = CadfCredential{} }
func (m *CadfCredential) String() string            { return proto.CompactTextString(m) }
func (*CadfCredential) ProtoMessage()               {}
func (*CadfCredential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CadfCredential) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CadfCredential) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type CadfReason struct {
	ReasonCode uint32 `protobuf:"varint,1,opt,name=reasonCode" json:"reasonCode,omitempty"`
	ReasonType string `protobuf:"bytes,2,opt,name=reasonType" json:"reasonType,omitempty"`
}

func (m *CadfReason) Reset()                    { *m = CadfReason{} }
func (m *CadfReason) String() string            { return proto.CompactTextString(m) }
func (*CadfReason) ProtoMessage()               {}
func (*CadfReason) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CadfReason) GetReasonCode() uint32 {
	if m != nil {
		return m.ReasonCode
	}
	return 0
}

func (m *CadfReason) GetReasonType() string {
	if m != nil {
		return m.ReasonType
	}
	return ""
}

type CadfAttachment struct {
	TypeURI     string `protobuf:"bytes,1,opt,name=typeURI" json:"typeURI,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=contentType" json:"contentType,omitempty"`
	Content     string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *CadfAttachment) Reset()                    { *m = CadfAttachment{} }
func (m *CadfAttachment) String() string            { return proto.CompactTextString(m) }
func (*CadfAttachment) ProtoMessage()               {}
func (*CadfAttachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CadfAttachment) GetTypeURI() string {
	if m != nil {
		return m.TypeURI
	}
	return ""
}

func (m *CadfAttachment) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *CadfAttachment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CadfReporterstep struct {
	Role         string `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	ReporterId   string `protobuf:"bytes,2,opt,name=reporterId" json:"reporterId,omitempty"`
	ReportedTime string `protobuf:"bytes,3,opt,name=reportedTime" json:"reportedTime,omitempty"`
}

func (m *CadfReporterstep) Reset()                    { *m = CadfReporterstep{} }
func (m *CadfReporterstep) String() string            { return proto.CompactTextString(m) }
func (*CadfReporterstep) ProtoMessage()               {}
func (*CadfReporterstep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CadfReporterstep) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *CadfReporterstep) GetReporterId() string {
	if m != nil {
		return m.ReporterId
	}
	return ""
}

func (m *CadfReporterstep) GetReportedTime() string {
	if m != nil {
		return m.ReportedTime
	}
	return ""
}

type CadfAPI struct {
	CreatedAt string `protobuf:"bytes,1,opt,name=createdAt" json:"createdAt,omitempty"`
	TargetUrl string `protobuf:"bytes,2,opt,name=targetUrl" json:"targetUrl,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	PublicDns string `protobuf:"bytes,5,opt,name=publicDns" json:"publicDns,omitempty"`
}

func (m *CadfAPI) Reset()                    { *m = CadfAPI{} }
func (m *CadfAPI) String() string            { return proto.CompactTextString(m) }
func (*CadfAPI) ProtoMessage()               {}
func (*CadfAPI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CadfAPI) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *CadfAPI) GetTargetUrl() string {
	if m != nil {
		return m.TargetUrl
	}
	return ""
}

func (m *CadfAPI) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CadfAPI) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CadfAPI) GetPublicDns() string {
	if m != nil {
		return m.PublicDns
	}
	return ""
}

type CadfLatencies struct {
	Request  uint32 `protobuf:"varint,1,opt,name=request" json:"request,omitempty"`
	Target   uint32 `protobuf:"varint,2,opt,name=target" json:"target,omitempty"`
	Observer uint32 `protobuf:"varint,3,opt,name=observer" json:"observer,omitempty"`
}

func (m *CadfLatencies) Reset()                    { *m = CadfLatencies{} }
func (m *CadfLatencies) String() string            { return proto.CompactTextString(m) }
func (*CadfLatencies) ProtoMessage()               {}
func (*CadfLatencies) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CadfLatencies) GetRequest() uint32 {
	if m != nil {
		return m.Request
	}
	return 0
}

func (m *CadfLatencies) GetTarget() uint32 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *CadfLatencies) GetObserver() uint32 {
	if m != nil {
		return m.Observer
	}
	return 0
}

func init() {
	proto.RegisterType((*TrailEventSet)(nil), "trail.TrailEventSet")
	proto.RegisterType((*TrailEventWK)(nil), "trail.TrailEventWK")
	proto.RegisterType((*TrailEvent)(nil), "trail.TrailEvent")
	proto.RegisterType((*UpstreamService)(nil), "trail.UpstreamService")
	proto.RegisterType((*Request)(nil), "trail.Request")
	proto.RegisterType((*Response)(nil), "trail.Response")
	proto.RegisterType((*API)(nil), "trail.API")
	proto.RegisterType((*Latencies)(nil), "trail.Latencies")
	proto.RegisterType((*Consumer)(nil), "trail.Consumer")
	proto.RegisterType((*CadfEventSet)(nil), "trail.CadfEventSet")
	proto.RegisterType((*CadfEventWK)(nil), "trail.CadfEventWK")
	proto.RegisterType((*CadfEvent)(nil), "trail.CadfEvent")
	proto.RegisterType((*Meta)(nil), "trail.Meta")
	proto.RegisterType((*CadfResource)(nil), "trail.CadfResource")
	proto.RegisterType((*CadfHost)(nil), "trail.CadfHost")
	proto.RegisterType((*CadfCredential)(nil), "trail.CadfCredential")
	proto.RegisterType((*CadfReason)(nil), "trail.CadfReason")
	proto.RegisterType((*CadfAttachment)(nil), "trail.CadfAttachment")
	proto.RegisterType((*CadfReporterstep)(nil), "trail.CadfReporterstep")
	proto.RegisterType((*CadfAPI)(nil), "trail.CadfAPI")
	proto.RegisterType((*CadfLatencies)(nil), "trail.CadfLatencies")
}

func init() { proto.RegisterFile("trail.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x58, 0xcb, 0x6e, 0x1c, 0x45,
	0x17, 0xd6, 0x78, 0xc6, 0x9e, 0xe9, 0x33, 0x1e, 0x7b, 0x5c, 0x8e, 0xed, 0xfe, 0x1d, 0xff, 0xbf,
	0xfd, 0x77, 0x36, 0xc6, 0x91, 0x8c, 0x70, 0x94, 0x00, 0x89, 0x82, 0x34, 0x71, 0x22, 0x65, 0x44,
	0x00, 0x53, 0x89, 0x41, 0x42, 0xa0, 0x51, 0xb9, 0xbb, 0xec, 0xe9, 0x64, 0xa6, 0xab, 0x53, 0x55,
	0x6d, 0x31, 0xec, 0x58, 0xb1, 0x63, 0x83, 0xd8, 0xf0, 0x1e, 0x3c, 0x03, 0x4b, 0x1e, 0x82, 0xc7,
	0x60, 0x83, 0xea, 0xd6, 0x37, 0x5f, 0x20, 0x42, 0x2c, 0xd8, 0xf5, 0xf9, 0xce, 0x77, 0xea, 0x72,
	0xaa, 0xea, 0x3b, 0x67, 0x06, 0xba, 0x92, 0x93, 0x78, 0xb2, 0x9f, 0x72, 0x26, 0x19, 0x9a, 0xd7,
	0x46, 0xf0, 0x63, 0x03, 0x7a, 0x2f, 0xd4, 0xd7, 0x93, 0x73, 0x9a, 0xc8, 0xe7, 0x54, 0xa2, 0x1b,
	0x30, 0x1f, 0xb2, 0x2c, 0x91, 0x7e, 0x63, 0xa7, 0xb1, 0xdb, 0xc2, 0xc6, 0x40, 0x03, 0xe8, 0x67,
	0xa9, 0x90, 0x9c, 0x92, 0xe9, 0x48, 0x50, 0x7e, 0x1e, 0x87, 0xd4, 0x9f, 0xdb, 0x69, 0xec, 0x76,
	0x0f, 0xd6, 0xf7, 0xcd, 0xb0, 0xc7, 0xd6, 0xfd, 0xdc, 0x78, 0xf1, 0x72, 0x56, 0x05, 0xd0, 0x6d,
	0x58, 0xa0, 0x6a, 0x12, 0xe1, 0x37, 0x77, 0x9a, 0xbb, 0xdd, 0x83, 0x55, 0x1b, 0x58, 0x4c, 0xff,
	0xf9, 0x87, 0xd8, 0x52, 0x82, 0x2f, 0x61, 0xb1, 0x8c, 0xa3, 0x6d, 0x68, 0x4d, 0xa9, 0x24, 0x7a,
	0x51, 0xdd, 0x83, 0xae, 0x0d, 0xfd, 0x88, 0x4a, 0x82, 0xb5, 0x03, 0xdd, 0x86, 0x76, 0x4a, 0x66,
	0x13, 0x46, 0x22, 0xbb, 0xae, 0x95, 0x0b, 0xc3, 0x63, 0xc7, 0x08, 0x7e, 0x9a, 0x03, 0x28, 0x70,
	0xf4, 0x5f, 0x00, 0x21, 0x09, 0x97, 0x34, 0x1a, 0x11, 0xb7, 0x6f, 0xcf, 0x22, 0x03, 0x89, 0x6e,
	0x82, 0x17, 0x4e, 0x62, 0x9a, 0xc8, 0x51, 0x9c, 0xea, 0xc1, 0x3d, 0xdc, 0x31, 0xc0, 0x30, 0x45,
	0x5b, 0xd0, 0x24, 0x69, 0xec, 0x37, 0xf5, 0x9c, 0x60, 0xe7, 0x1c, 0x1c, 0x0d, 0xb1, 0x82, 0xd1,
	0x3e, 0x78, 0x13, 0x22, 0x69, 0x12, 0xc6, 0x54, 0xf8, 0x2d, 0xcd, 0xe9, 0x5b, 0xce, 0x33, 0x87,
	0xe3, 0x82, 0x82, 0x76, 0xa1, 0xcd, 0xe9, 0xeb, 0x8c, 0x0a, 0xe9, 0xcf, 0x6b, 0xf6, 0x92, 0x65,
	0x63, 0x83, 0x62, 0xe7, 0x46, 0xb7, 0xa1, 0xc3, 0xa9, 0x48, 0x59, 0x22, 0xa8, 0xbf, 0xa0, 0xa9,
	0xcb, 0x39, 0xd5, 0xc0, 0x38, 0x27, 0x28, 0x72, 0xc8, 0x12, 0x91, 0x4d, 0x29, 0xf7, 0xdb, 0x15,
	0xf2, 0xa1, 0x85, 0x71, 0x4e, 0x08, 0x7e, 0x6f, 0xc0, 0x72, 0xed, 0x30, 0xd1, 0x01, 0xac, 0xd9,
	0x53, 0x1f, 0xa5, 0x9c, 0x9d, 0xc7, 0x11, 0xe5, 0xa3, 0x84, 0x4c, 0xa9, 0x4e, 0x96, 0x87, 0x57,
	0xad, 0xf3, 0xc8, 0xfa, 0x3e, 0x26, 0x53, 0x8a, 0xee, 0xc1, 0xc6, 0x85, 0x18, 0x4e, 0xcf, 0x62,
	0x96, 0xd8, 0x24, 0xae, 0xd5, 0xa2, 0xb0, 0x76, 0xa2, 0x87, 0x70, 0xf3, 0x42, 0x5c, 0xca, 0xd9,
	0x4b, 0x1a, 0xca, 0x51, 0x1c, 0xe9, 0x4c, 0x7b, 0xd8, 0xaf, 0xc5, 0x1e, 0x19, 0xc2, 0x30, 0xba,
	0x34, 0x9c, 0x84, 0xfa, 0x16, 0xab, 0xf0, 0xd6, 0xa5, 0xe1, 0x03, 0x43, 0x18, 0x46, 0xc1, 0xb7,
	0x4d, 0x68, 0xdb, 0x64, 0xa3, 0x75, 0x58, 0x98, 0x52, 0x39, 0x66, 0x91, 0xdd, 0xa6, 0xb5, 0x50,
	0x1f, 0x9a, 0x19, 0x8f, 0xed, 0x2e, 0xd4, 0x27, 0xfa, 0x3f, 0x2c, 0xda, 0x83, 0x19, 0x9d, 0xb0,
	0x68, 0x66, 0x17, 0xd9, 0xb5, 0xd8, 0x23, 0x16, 0xcd, 0x10, 0x82, 0x96, 0x88, 0xbf, 0xa1, 0x76,
	0x01, 0xfa, 0x1b, 0x6d, 0x83, 0xa3, 0x8c, 0xd4, 0x80, 0xf3, 0xda, 0x05, 0x16, 0x3a, 0xe6, 0x31,
	0x1a, 0x40, 0xf7, 0x75, 0x46, 0xf9, 0x4c, 0x48, 0x1e, 0x27, 0x67, 0xfe, 0x82, 0x7e, 0x38, 0xdb,
	0xd5, 0x3b, 0xb1, 0xff, 0x69, 0xc1, 0x78, 0x92, 0x48, 0x3e, 0xc3, 0xe5, 0x18, 0x74, 0x17, 0xda,
	0x63, 0x4a, 0x22, 0xca, 0x85, 0xdf, 0xd6, 0xe1, 0x37, 0x6b, 0xe1, 0x4f, 0x8d, 0xd7, 0x84, 0x3a,
	0xee, 0xe6, 0x07, 0xd0, 0xaf, 0x8f, 0xab, 0xf6, 0xfd, 0x8a, 0xce, 0x6c, 0x32, 0xd4, 0xa7, 0x12,
	0x8b, 0x73, 0x32, 0xc9, 0xa8, 0xcd, 0x85, 0x31, 0xee, 0xcf, 0xbd, 0xd7, 0xd8, 0xbc, 0x0f, 0x8b,
	0xe5, 0x81, 0xdf, 0x24, 0x36, 0xf8, 0xb5, 0x01, 0x1d, 0x77, 0x8b, 0xd5, 0x21, 0x08, 0x49, 0x64,
	0x26, 0x74, 0x6c, 0x0f, 0x5b, 0x2b, 0xcf, 0xe7, 0x5c, 0x29, 0x9f, 0xb7, 0xa0, 0xe7, 0xee, 0xbc,
	0x39, 0x07, 0x93, 0xec, 0x45, 0x07, 0xea, 0x83, 0xb8, 0x57, 0x24, 0x64, 0x5e, 0x27, 0x64, 0xab,
	0xf6, 0x70, 0xae, 0xc8, 0xc8, 0xdf, 0xd9, 0xd1, 0xf7, 0x0d, 0x68, 0x0e, 0x8e, 0x86, 0x4a, 0x69,
	0x42, 0x4e, 0x49, 0x55, 0x69, 0x2c, 0x32, 0x90, 0xea, 0x1a, 0xe5, 0x2a, 0x9b, 0xf1, 0x89, 0x1d,
	0xa7, 0xeb, 0xb0, 0x63, 0x3e, 0x41, 0x4b, 0x30, 0x97, 0x3f, 0x82, 0xb9, 0x38, 0x52, 0x69, 0xd0,
	0x0f, 0xd1, 0x5e, 0x2b, 0xf5, 0x5d, 0xbe, 0x8d, 0x63, 0x66, 0xa5, 0xa4, 0xb8, 0x8d, 0x4f, 0x99,
	0x90, 0xc1, 0x27, 0xe0, 0xe5, 0x02, 0x84, 0xfc, 0x42, 0x75, 0x4c, 0x8e, 0x73, 0x95, 0x41, 0xd0,
	0x7a, 0xc5, 0x92, 0x33, 0xbd, 0x90, 0x1e, 0xd6, 0xdf, 0x6a, 0x97, 0x29, 0x67, 0x5f, 0x9b, 0x4b,
	0xde, 0xc3, 0xc6, 0x08, 0x8e, 0xa1, 0xe3, 0xb4, 0x04, 0x6d, 0x42, 0x27, 0x13, 0x94, 0x97, 0x04,
	0x22, 0xb7, 0x6b, 0x19, 0x98, 0xab, 0x67, 0xa0, 0xb6, 0xbd, 0xe0, 0x87, 0x06, 0x2c, 0x1e, 0x92,
	0xe8, 0xf4, 0x9f, 0x2f, 0x4f, 0x7b, 0xb5, 0xf2, 0x84, 0x9c, 0x42, 0xba, 0xd9, 0x4b, 0xd5, 0xe9,
	0x0b, 0xe8, 0x96, 0xe0, 0x3f, 0x2f, 0x4e, 0x7b, 0xf5, 0xe2, 0xd4, 0xaf, 0x0f, 0x5e, 0xd4, 0xa6,
	0xdf, 0xda, 0xe0, 0xe5, 0xb0, 0xcd, 0x47, 0x23, 0x3f, 0x6e, 0x1f, 0xda, 0x72, 0x96, 0xd2, 0x63,
	0x3c, 0xb4, 0x97, 0xc3, 0x99, 0x68, 0x0b, 0x3c, 0xbd, 0xba, 0x17, 0xb3, 0x94, 0xda, 0x04, 0x16,
	0x40, 0xe1, 0x8d, 0xf3, 0xbb, 0x52, 0x00, 0xea, 0x8d, 0x91, 0x50, 0x2a, 0x65, 0x36, 0x57, 0xc5,
	0x5a, 0x6a, 0x36, 0x96, 0xc9, 0x90, 0x4d, 0x4d, 0x8d, 0xf1, 0xb0, 0x33, 0x95, 0x67, 0x4a, 0x85,
	0x20, 0x67, 0x54, 0x17, 0x14, 0x0f, 0x3b, 0x13, 0xbd, 0x03, 0x5e, 0x9c, 0xc4, 0x32, 0x26, 0x92,
	0x71, 0xbf, 0xa3, 0x77, 0xbb, 0x5a, 0xda, 0x2d, 0xa6, 0x82, 0x65, 0x3c, 0xa4, 0xb8, 0x60, 0xa9,
	0xce, 0x40, 0x12, 0x7e, 0x46, 0xa5, 0xef, 0x5d, 0xcd, 0xb7, 0x14, 0xf4, 0x36, 0x74, 0xd8, 0x89,
	0x3a, 0x63, 0xca, 0x7d, 0xb8, 0x9a, 0x9e, 0x93, 0xd0, 0x4e, 0x2e, 0xb2, 0x47, 0x44, 0x8e, 0xfd,
	0x6e, 0xe5, 0x31, 0x28, 0x08, 0xbd, 0x05, 0x0b, 0x9c, 0x12, 0xc1, 0x12, 0x7f, 0xb1, 0xd2, 0x3a,
	0x98, 0x01, 0x95, 0x03, 0x5b, 0x82, 0xba, 0xda, 0x82, 0x9e, 0x53, 0x1e, 0xcb, 0x99, 0xdf, 0x33,
	0x57, 0xdb, 0xd9, 0xf9, 0x53, 0x5c, 0x2a, 0x3d, 0xc5, 0x07, 0x4a, 0x91, 0xcc, 0xb3, 0xd3, 0xda,
	0xe1, 0x2f, 0xeb, 0x19, 0xd6, 0x4a, 0x33, 0x0c, 0xa4, 0x24, 0xe1, 0x78, 0xaa, 0x2e, 0x41, 0x95,
	0x8b, 0xde, 0x85, 0x72, 0x05, 0xf1, 0xfb, 0xd7, 0x85, 0x56, 0x6a, 0xcd, 0x43, 0x58, 0x72, 0x92,
	0x67, 0xa7, 0x5d, 0xb9, 0x2e, 0xb6, 0x46, 0x46, 0xef, 0x43, 0x45, 0x31, 0x7d, 0x74, 0x5d, 0x70,
	0x55, 0x5c, 0x8b, 0x64, 0x3f, 0x26, 0x92, 0xf8, 0xab, 0x95, 0x64, 0x2b, 0x08, 0x05, 0xc5, 0xe0,
	0x9a, 0x72, 0xa3, 0x2a, 0xd1, 0x9a, 0x83, 0xa0, 0x25, 0xc9, 0x99, 0xf0, 0xd7, 0x76, 0x9a, 0x2a,
	0x93, 0xea, 0x5b, 0x25, 0x83, 0xe4, 0xb3, 0x0a, 0x7f, 0x5d, 0x3f, 0xd2, 0xab, 0x92, 0x51, 0x62,
	0xa2, 0x87, 0xea, 0x08, 0x52, 0xc6, 0x25, 0xe5, 0xe1, 0x98, 0xc4, 0x89, 0xbf, 0xa1, 0x43, 0x37,
	0x2a, 0x87, 0x6c, 0xfc, 0x42, 0xd2, 0x14, 0x57, 0xd9, 0x68, 0xc7, 0x34, 0x78, 0x7e, 0xa5, 0x1d,
	0xd3, 0xf3, 0xb9, 0x26, 0xef, 0xa0, 0xdc, 0xe4, 0xfd, 0x47, 0xf3, 0x6e, 0x94, 0x78, 0x97, 0x35,
	0x7a, 0xc1, 0xcf, 0x4d, 0x68, 0x29, 0x81, 0xf8, 0x37, 0x75, 0x56, 0xbb, 0xd0, 0x57, 0x32, 0x5e,
	0xea, 0xa6, 0x54, 0x4f, 0xab, 0x4e, 0x68, 0x49, 0xe1, 0x79, 0x0f, 0x25, 0x50, 0x00, 0x3d, 0xcd,
	0x14, 0x29, 0x09, 0xa9, 0x1a, 0xda, 0x56, 0x20, 0x05, 0x3e, 0x57, 0xd8, 0x30, 0x42, 0x7b, 0xb0,
	0x52, 0xe2, 0xd8, 0xe5, 0x1b, 0x95, 0x59, 0xce, 0x79, 0x76, 0xe1, 0x7b, 0xb0, 0xe2, 0x16, 0x5e,
	0x74, 0xe2, 0x46, 0x77, 0x96, 0xad, 0xe3, 0xd0, 0x35, 0xe4, 0x0f, 0x60, 0xf3, 0x62, 0xff, 0x97,
	0xc9, 0xf1, 0x48, 0x09, 0xa5, 0x16, 0x24, 0x0f, 0x6f, 0xd4, 0xdb, 0xbf, 0x4c, 0x8e, 0xb5, 0x4c,
	0x6e, 0x43, 0x97, 0xa4, 0xf1, 0xe8, 0x9c, 0x72, 0xa1, 0x96, 0xe3, 0x99, 0x86, 0x8c, 0xa4, 0xf1,
	0x67, 0x06, 0x09, 0x7e, 0xb1, 0xf5, 0xc8, 0xe9, 0xcc, 0x1b, 0x08, 0xb4, 0x93, 0x87, 0x66, 0x49,
	0x1e, 0x6e, 0x41, 0x4b, 0x57, 0xe8, 0x56, 0xb5, 0x29, 0x27, 0xd1, 0xa9, 0xaa, 0xd2, 0x58, 0x3b,
	0xd1, 0x5d, 0x5d, 0x32, 0x23, 0x9a, 0xc8, 0x98, 0x4c, 0xec, 0xef, 0x82, 0xf2, 0xc5, 0x3f, 0xcc,
	0x9d, 0xb8, 0x44, 0x54, 0x95, 0xb6, 0x74, 0xb8, 0x26, 0xb3, 0x5e, 0xea, 0x4e, 0x33, 0x38, 0x85,
	0x8e, 0x9b, 0xe7, 0xb2, 0x4d, 0x90, 0x28, 0xe2, 0x54, 0x08, 0xb7, 0x09, 0x6b, 0xaa, 0xf2, 0x4b,
	0xce, 0x68, 0x22, 0xed, 0x2e, 0x8c, 0xa1, 0x54, 0x31, 0x9d, 0x10, 0x79, 0xca, 0xf8, 0xd4, 0x16,
	0x97, 0xdc, 0x0e, 0xee, 0xc3, 0x52, 0x75, 0x91, 0x6a, 0x0c, 0xc9, 0x5e, 0xd1, 0xc4, 0x4e, 0x68,
	0x0c, 0xfd, 0xe6, 0xd5, 0x09, 0xd9, 0x7e, 0x4e, 0x7d, 0x07, 0xcf, 0x00, 0x0a, 0x0d, 0x46, 0xff,
	0x03, 0x30, 0x2a, 0x7c, 0xc8, 0x22, 0x6a, 0x3b, 0x95, 0x12, 0x52, 0xf8, 0x5f, 0x14, 0xe3, 0x94,
	0x90, 0xe0, 0xd4, 0xac, 0xa4, 0xd0, 0x89, 0xf2, 0x61, 0x35, 0xaa, 0x87, 0xb5, 0x03, 0xdd, 0x90,
	0x25, 0xd2, 0xd5, 0x53, 0xdb, 0x88, 0x95, 0x20, 0x15, 0x6b, 0x4d, 0x9b, 0x0b, 0x67, 0x06, 0x2f,
	0xa1, 0x5f, 0x17, 0x15, 0xb5, 0x3b, 0xce, 0x26, 0xee, 0x55, 0xeb, 0x6f, 0xb3, 0x5e, 0xc3, 0x19,
	0x46, 0xc5, 0x7a, 0x1d, 0x62, 0x94, 0x52, 0x5b, 0x91, 0x2e, 0xdb, 0x4d, 0xa7, 0x94, 0x05, 0x16,
	0x7c, 0xd7, 0x80, 0xb6, 0x15, 0x23, 0x55, 0xe3, 0xf3, 0x46, 0xca, 0x4e, 0x54, 0xea, 0xac, 0xb6,
	0xc0, 0x33, 0x15, 0xf4, 0x38, 0x6f, 0x2c, 0x0b, 0xe0, 0x2f, 0xb5, 0x95, 0x5b, 0xe0, 0xa5, 0xd9,
	0xc9, 0x24, 0x0e, 0x1f, 0x27, 0xc2, 0xbe, 0xe8, 0x02, 0x08, 0xbe, 0x82, 0x5e, 0x45, 0xed, 0xae,
	0xe9, 0x2a, 0xd7, 0xf3, 0x7a, 0x6f, 0xfa, 0x4a, 0x57, 0xda, 0x37, 0x4b, 0xa5, 0xdd, 0x34, 0x97,
	0xb9, 0xfd, 0x68, 0x13, 0xfc, 0x90, 0x4d, 0xf7, 0xe3, 0x93, 0xe9, 0x3e, 0x99, 0x84, 0x63, 0x3a,
	0x9d, 0xd9, 0x17, 0x70, 0x7e, 0xe7, 0x64, 0x41, 0xff, 0xa5, 0x71, 0xe7, 0x8f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xc4, 0x7a, 0x50, 0x98, 0xe1, 0x10, 0x00, 0x00,
}
